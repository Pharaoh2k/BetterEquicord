name: Release (fork-only)

on:
  push:
    branches:
      - main

permissions:
  contents: write  # lets the workflow create releases in my fork

env:
  REPO: ${{ github.repository }}  # my fork Pharaoh2k/Equicord
  RELEASE_TAG: latest             # moving tag is fine too

jobs:
  build:
    name: Build Equicord
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build web
        run: pnpm buildWebStandalone

      - name: Build
        run: pnpm buildStandalone

      - name: Generate plugin lists
        run: |
          pnpm generatePluginJson dist/plugins.json
          pnpm generateEquicordPluginJson dist/equicordplugins.json
          pnpm generateVencordPluginJson dist/vencordplugins.json
          pnpm generateDevsList dist/devs.json

      - name: Collect files to be released
        run: |
          cd dist
          mkdir -p release
          cp browser/browser.* release 2>/dev/null || true
          cp Vencord.user.{js,js.LEGAL.txt} release 2>/dev/null || true
          # plugin data jsons, extension zips, desktop/vesktop asars (if present)
          cp *.{json,zip,asar} release 2>/dev/null || true
          # legacy un-asared files
          cp desktop/* release 2>/dev/null || true
          for file in equibop/*; do
            [ -e "$file" ] || continue
            filename=$(basename "$file")
            cp "$file" "release/equibop${filename^}"
          done
          find release -size 0 -delete || true
          rm -f release/package.json release/*.map

      # ---- release to THIS fork only (using gh CLI) ----
      - name: Ensure "latest" release exists (or create it)
        env:
          GH_TOKEN: ${{ github.token }}  # gh CLI reads GH_TOKEN in Actions
        run: |
          gh release view "$RELEASE_TAG" --repo "$REPO" >/dev/null 2>&1 || \
          gh release create "$RELEASE_TAG" --repo "$REPO" \
            --title "Equicord Stable" \
            --notes "Automated stable release"

      - name: Upload assets to the release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload "$RELEASE_TAG" dist/release/* --clobber --repo "$REPO"
